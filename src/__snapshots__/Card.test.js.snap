// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CardContainer should match snapshot when data is passed in  1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Card
    answer="var"
    handleNext={[MockFunction]}
    handlePrev={[MockFunction]}
    image={true}
    question="Which of the following is an ES5 variable declaration: var, let, or const?"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h2>
          Question: 
        </h2>,
        <img
          className="problem-img"
          src={true}
        />,
        <h3>
          Which of the following is an ES5 variable declaration: var, let, or const?
        </h3>,
        null,
        <form>
          <input
            onChange={[Function]}
            placeholder=" Type answer here..."
            type="text"
          />
          <div>
            <button
              className="answer-button"
              onClick={[Function]}
            >
              Check Answer
            </button>
            <button
              className="prev-button"
              onClick={[MockFunction]}
            >
              Previous Question
            </button>
            <button
              className="next-button"
              onClick={[MockFunction]}
            >
              Next Question
            </button>
          </div>
        </form>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "Question: ",
            undefined,
          ],
        },
        "ref": null,
        "rendered": Array [
          "Question: ",
          undefined,
        ],
        "type": "h2",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "problem-img",
          "src": true,
        },
        "ref": null,
        "rendered": null,
        "type": "img",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Which of the following is an ES5 variable declaration: var, let, or const?",
        },
        "ref": null,
        "rendered": "Which of the following is an ES5 variable declaration: var, let, or const?",
        "type": "h3",
      },
      null,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <input
              onChange={[Function]}
              placeholder=" Type answer here..."
              type="text"
            />,
            <div>
              <button
                className="answer-button"
                onClick={[Function]}
              >
                Check Answer
              </button>
              <button
                className="prev-button"
                onClick={[MockFunction]}
              >
                Previous Question
              </button>
              <button
                className="next-button"
                onClick={[MockFunction]}
              >
                Next Question
              </button>
            </div>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "onChange": [Function],
              "placeholder": " Type answer here...",
              "type": "text",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <button
                  className="answer-button"
                  onClick={[Function]}
                >
                  Check Answer
                </button>,
                <button
                  className="prev-button"
                  onClick={[MockFunction]}
                >
                  Previous Question
                </button>,
                <button
                  className="next-button"
                  onClick={[MockFunction]}
                >
                  Next Question
                </button>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Check Answer",
                  "className": "answer-button",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "Check Answer",
                "type": "button",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Previous Question",
                  "className": "prev-button",
                  "onClick": [MockFunction],
                },
                "ref": null,
                "rendered": "Previous Question",
                "type": "button",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Next Question",
                  "className": "next-button",
                  "onClick": [MockFunction],
                },
                "ref": null,
                "rendered": "Next Question",
                "type": "button",
              },
            ],
            "type": "div",
          },
        ],
        "type": "form",
      },
    ],
    "type": "article",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h2>
            Question: 
          </h2>,
          <img
            className="problem-img"
            src={true}
          />,
          <h3>
            Which of the following is an ES5 variable declaration: var, let, or const?
          </h3>,
          null,
          <form>
            <input
              onChange={[Function]}
              placeholder=" Type answer here..."
              type="text"
            />
            <div>
              <button
                className="answer-button"
                onClick={[Function]}
              >
                Check Answer
              </button>
              <button
                className="prev-button"
                onClick={[MockFunction]}
              >
                Previous Question
              </button>
              <button
                className="next-button"
                onClick={[MockFunction]}
              >
                Next Question
              </button>
            </div>
          </form>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Question: ",
              undefined,
            ],
          },
          "ref": null,
          "rendered": Array [
            "Question: ",
            undefined,
          ],
          "type": "h2",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "problem-img",
            "src": true,
          },
          "ref": null,
          "rendered": null,
          "type": "img",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Which of the following is an ES5 variable declaration: var, let, or const?",
          },
          "ref": null,
          "rendered": "Which of the following is an ES5 variable declaration: var, let, or const?",
          "type": "h3",
        },
        null,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <input
                onChange={[Function]}
                placeholder=" Type answer here..."
                type="text"
              />,
              <div>
                <button
                  className="answer-button"
                  onClick={[Function]}
                >
                  Check Answer
                </button>
                <button
                  className="prev-button"
                  onClick={[MockFunction]}
                >
                  Previous Question
                </button>
                <button
                  className="next-button"
                  onClick={[MockFunction]}
                >
                  Next Question
                </button>
              </div>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "onChange": [Function],
                "placeholder": " Type answer here...",
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <button
                    className="answer-button"
                    onClick={[Function]}
                  >
                    Check Answer
                  </button>,
                  <button
                    className="prev-button"
                    onClick={[MockFunction]}
                  >
                    Previous Question
                  </button>,
                  <button
                    className="next-button"
                    onClick={[MockFunction]}
                  >
                    Next Question
                  </button>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Check Answer",
                    "className": "answer-button",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": "Check Answer",
                  "type": "button",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Previous Question",
                    "className": "prev-button",
                    "onClick": [MockFunction],
                  },
                  "ref": null,
                  "rendered": "Previous Question",
                  "type": "button",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Next Question",
                    "className": "next-button",
                    "onClick": [MockFunction],
                  },
                  "ref": null,
                  "rendered": "Next Question",
                  "type": "button",
                },
              ],
              "type": "div",
            },
          ],
          "type": "form",
        },
      ],
      "type": "article",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
